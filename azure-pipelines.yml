# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  batch: true
  branches:
    include:
      - master
      - dev
      - release/*
      - feature/*
      - hotfix/*
      - bugfix/*
  paths:
    exclude:
      - README.md
      - LICENSE
      - .travis.yml
      - .github/*
      - .gitignore

pr:
  autoCancel: true
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
      - LICENSE
      - .travis.yml
      - .github/*
      - .gitignore

variables:
  APPNAME: mylabs-go
  major: 0
  minor: 5
  patch: 3
  brpatch: $[counter(variables['build.sourcebranchname'], 0)]
  appversion: $(major).$(minor).$(patch)
  GOPATH: '$(Pipeline.Workspace)/gowork'

stages:

  - stage: set_build_num
    displayName: Set Build Number
    jobs:
      - job: set_build_number
        steps:
          - task: Bash@3
            displayName: 'Set Build Number'
            inputs:
              targetType: 'inline'
              script: |
                set -e -x
                GITBRANCH=`echo "$(Build.SourceBranch)" | sed "s/refs\/heads\///" | cut -f1 -d'/'`
                echo "##vso[build.updatebuildnumber]$(appversion)-$GITBRANCH.$(brpatch) "

  - stage: Build
    displayName: Build (Multi-Platform)
    jobs:
      - template: templates/azure/jobs/build.yml
        parameters:
          appName: $(APPNAME)
          appVer: $(appversion)
          brPatchVer: $(brpatch)

  - stage: Test
    jobs:
      - template: templates/azure/jobs/test.yml

  - stage: Release
    displayName: Release (Multi-Platform)
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix'))
    jobs:
      - template: templates/azure/jobs/release.yml
        parameters:
          parameters:
          appName: $(APPNAME)
          appVer: $(appversion)
          brPatchVer: $(brpatch)
