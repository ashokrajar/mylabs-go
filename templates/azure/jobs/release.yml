parameters:
  appName: ''

jobs:
  - job:
    strategy:
      matrix:
        linux:
          vmImage: 'ubuntu-latest'
        mac:
          vmImage: 'macos-latest'
        windows:
          vmImage: 'windows-latest'

    pool:
      vmImage: $(vmImage)

    steps:
      - template: ../steps/setupgo.yml

      - template: ../steps/buildapp.yml
        parameters:
          appName: ${{ parameters.appName }}

      - task: Bash@3
        displayName: 'Get/Set Application/Package Version'
        inputs:
          targetType: 'inline'
          script: |
            set -e -x
            OS=`go env GOOS`
            ARCH=`go env GOARCH`
            if [ $(Agent.OS) == 'Windows_NT' ]; then
              version=`./bin/${{ parameters.appName }}_$OS\_$ARCH.exe version | tr + -`
            else
              version=`./bin/${{ parameters.appName }}_$OS\_$ARCH version | tr + -`
            fi

            set +x
            echo "##vso[task.setvariable variable=MYLABSCLI_VERSION;]$version"

      - task: Bash@3
        displayName: 'Get/Set OS Specific Package Feed Name'
        inputs:
          targetType: 'inline'
          script: |
            set -e -x
            OS_NAME=`go env GOOS`

            set +x
            echo "##vso[task.setvariable variable=FEED_NAME;]$OS_NAME"

      - task: UniversalPackages@0
        displayName: 'Publish Release Artifacts'
        inputs:
          command: 'publish'
          publishDirectory: '$(Build.ArtifactStagingDirectory)/bin'
          feedsToUsePublish: 'internal'
          vstsFeedPublish: '1354bdaa-1b77-41d3-a573-e85080e85d85/90f9f1a3-3b7f-4814-aea6-f06d7842d9af'
          vstsFeedPackagePublish: $(FEED_NAME)
          versionOption: 'custom'
          versionPublish: $(MYLABSCLI_VERSION)
